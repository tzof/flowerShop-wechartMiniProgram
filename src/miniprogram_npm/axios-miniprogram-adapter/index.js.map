{"version":3,"sources":["index.js","lib/axios.js","lib/utils.js","lib/helpers/bind.js","lib/core/Axios.js","lib/helpers/buildURL.js","lib/core/InterceptorManager.js","lib/core/dispatchRequest.js","lib/core/transformData.js","lib/cancel/isCancel.js","lib/defaults.js","lib/helpers/normalizeHeaderName.js","lib/adapters/xhr.js","lib/core/settle.js","lib/core/createError.js","lib/core/enhanceError.js","lib/core/buildFullPath.js","lib/helpers/isAbsoluteURL.js","lib/helpers/combineURLs.js","lib/helpers/parseHeaders.js","lib/helpers/isURLSameOrigin.js","lib/helpers/cookies.js","lib/adapters/http.js","package.json","lib/core/mergeConfig.js","lib/cancel/Cancel.js","lib/cancel/CancelToken.js","lib/helpers/spread.js"],"names":[],"mappings":";;;;;;;AAAA;;;ACAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,AENA,ADGA;ADIA,AENA,ADGA;ADIA,AENA,ADGA;ADIA,AGTA,ADGA,ADGA;ADIA,AGTA,ADGA,ADGA;ADIA,AGTA,ADGA,ADGA;ADIA,AGTA,ADGA,AENA,AHSA;ADIA,AGTA,ADGA,AENA,AHSA;ADIA,AGTA,ADGA,AENA,AHSA;ADIA,AGTA,AENA,AHSA,AENA,AHSA;ADIA,AGTA,AENA,AHSA,AENA,AHSA;ADIA,AGTA,AENA,AHSA,AENA,AHSA;ADIA,AGTA,AENA,ACHA,AFMA,AHSA;ADIA,AGTA,AENA,ACHA,AFMA,AHSA;ADIA,AGTA,AENA,ACHA,AFMA,AHSA;ADIA,AGTA,AENA,ACHA,ACHA,AHSA,AHSA;ADIA,AGTA,AENA,ACHA,ACHA,AHSA,AHSA;ADIA,AGTA,AENA,ACHA,ACHA,AHSA,AHSA;ADIA,AQxBA,ALeA,AENA,ACHA,ACHA,AHSA,AHSA;ADIA,AQxBA,ALeA,AENA,ACHA,ACHA,AHSA,AHSA;ADIA,AQxBA,ALeA,AENA,ACHA,ACHA,AHSA,AHSA;ADIA,AQxBA,ALeA,AENA,ACHA,ACHA,AENA,ALeA,AHSA;ADIA,AQxBA,ALeA,AENA,ACHA,ACHA,AENA,ALeA,AHSA;ADIA,AQxBA,ALeA,AENA,ACHA,ACHA,AENA,ALeA,AHSA;ADIA,AGTA,AENA,ACHA,ACHA,AENA,ALeA,AMlBA,AT2BA;ADIA,AGTA,AENA,ACHA,ACHA,AENA,ALeA,AMlBA,AT2BA;ADIA,AGTA,AENA,ACHA,ACHA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,ACHA,ACHA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,ACHA,ACHA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,ACHA,ACHA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,ACHA,AMlBA,ALeA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,ACHA,AMlBA,ALeA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,ACHA,AMlBA,ALeA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,AQxBA,APqBA,AMlBA,ALeA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,AQxBA,APqBA,AMlBA,ALeA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,AQxBA,APqBA,AMlBA,ALeA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,AHSA;AU7BA,AXiCA,AGTA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,AHSA;AU7BA,AXiCA,AGTA,AENA,AU9BA,AFMA,APqBA,AQxBA,AFMA,AHSA,ALeA,AHSA;AU7BA,AXiCA,AGTA,AENA,AU9BA,AFMA,APqBA,AQxBA,AFMA,AHSA,ALeA,AHSA;AU7BA,AXiCA,AGTA,AENA,AU9BA,AFMA,APqBA,AQxBA,AFMA,AHSA,ALeA,AHSA;AU7BA,AXiCA,AGTA,AENA,AU9BA,AFMA,APqBA,AQxBA,AFMA,AHSA,ALeA,AYpCA,Af6CA;AU7BA,AXiCA,AGTA,AENA,AU9BA,AFMA,APqBA,AQxBA,AFMA,AHSA,ALeA,AYpCA,Af6CA;AU7BA,AXiCA,AGTA,AENA,AU9BA,AFMA,APqBA,AQxBA,AFMA,AHSA,ALeA,AYpCA,Af6CA;AU7BA,AXiCA,AGTA,AENA,AU9BA,AFMA,APqBA,AQxBA,AFMA,AHSA,ALeA,AavCA,ADGA,Af6CA;AU7BA,AXiCA,AGTA,AENA,AU9BA,AFMA,APqBA,AQxBA,AFMA,AHSA,ALeA,AavCA,ADGA,Af6CA;AU7BA,AXiCA,AGTA,AENA,AU9BA,AFMA,APqBA,AQxBA,AFMA,AHSA,ALeA,AavCA,ADGA,Af6CA;AU7BA,ARwBA,AENA,AU9BA,AFMA,APqBA,AQxBA,AFMA,AHSA,ALeA,AavCA,ADGA,AENA,AjBmDA;AU7BA,ARwBA,AENA,AU9BA,AFMA,APqBA,AQxBA,AFMA,AHSA,ALeA,AavCA,ADGA,AENA,AjBmDA;AU7BA,ARwBA,AENA,AU9BA,AFMA,APqBA,AQxBA,AFMA,AHSA,ALeA,AavCA,ADGA,AENA,AjBmDA;AU7BA,ARwBA,AENA,AU9BA,AFMA,APqBA,AQxBA,AFMA,AHSA,ALeA,AavCA,ADGA,AGTA,ADGA,AjBmDA;AU7BA,ARwBA,AENA,AU9BA,AT2BA,AQxBA,AFMA,AHSA,ALeA,AavCA,ADGA,AGTA,ADGA,AjBmDA;AU7BA,ARwBA,AENA,AU9BA,AT2BA,AQxBA,AFMA,AHSA,ALeA,AavCA,ADGA,AGTA,ADGA,AjBmDA;AU7BA,ARwBA,AENA,AU9BA,AT2BA,AQxBA,AFMA,AHSA,ALeA,AavCA,AGTA,AJYA,AGTA,ADGA,AjBmDA;AU7BA,ARwBA,AENA,AU9BA,AT2BA,AQxBA,AFMA,AHSA,ALeA,AavCA,AGTA,AJYA,AGTA,ADGA,AjBmDA;AU7BA,ARwBA,AENA,AU9BA,AT2BA,AQxBA,ALeA,ALeA,AavCA,AGTA,AJYA,AGTA,ADGA,AjBmDA;AoB3DA,AV8BA,ARwBA,AENA,AU9BA,AT2BA,AQxBA,ALeA,ALeA,AavCA,AGTA,ADGA,ADGA,AjBmDA;AoB3DA,AV8BA,ARwBA,AENA,AU9BA,AT2BA,AQxBA,ALeA,ALeA,AavCA,AGTA,ADGA,ADGA,AjBmDA;AoB3DA,AV8BA,ARwBA,AENA,AU9BA,AT2BA,AQxBA,ALeA,ALeA,AavCA,AGTA,ADGA,ADGA,AjBmDA;AoB3DA,AV8BA,ARwBA,AENA,ACHA,AQxBA,ALeA,ALeA,AgBhDA,ADGA,ADGA,AjBmDA,AqB/DA;ADIA,AV8BA,ARwBA,AENA,ACHA,AQxBA,ALeA,ALeA,AgBhDA,ADGA,ADGA,AjBmDA,AqB/DA;ADIA,AV8BA,ARwBA,AGTA,AQxBA,ALeA,ALeA,AgBhDA,ADGA,ADGA,AjBmDA,AqB/DA;ADIA,AV8BA,ARwBA,AGTA,AQxBA,AS3BA,Ad0CA,ALeA,AgBhDA,ADGA,ADGA,AjBmDA,AqB/DA;ADIA,AV8BA,ARwBA,AGTA,AQxBA,AS3BA,Ad0CA,ALeA,AgBhDA,ADGA,ADGA,AjBmDA,AqB/DA;ADIA,AV8BA,ARwBA,AGTA,AQxBA,AS3BA,Ad0CA,ALeA,AgBhDA,ADGA,ADGA,AjBmDA,AqB/DA;ADIA,AV8BA,AavCA,ArB+DA,AGTA,AQxBA,AS3BA,Ad0CA,ALeA,AgBhDA,ADGA,ADGA,AjBmDA,AqB/DA;ADIA,AV8BA,AavCA,ArB+DA,AGTA,AQxBA,AS3BA,Ad0CA,ALeA,AgBhDA,ADGA,ADGA,AjBmDA,AqB/DA;ADIA,AV8BA,AavCA,ArB+DA,AGTA,AQxBA,AS3BA,Ad0CA,ALeA,AgBhDA,ADGA,ADGA,AjBmDA,AqB/DA;ADIA,AV8BA,AavCA,ACHA,AtBkEA,AGTA,AQxBA,AS3BA,Ad0CA,ALeA,AgBhDA,ADGA,ADGA,AjBmDA,AqB/DA;ADIA,AV8BA,AavCA,ACHA,AtBkEA,AGTA,AQxBA,AS3BA,Ad0CA,ALeA,AgBhDA,ADGA,ADGA,AjBmDA,AqB/DA;ADIA,AV8BA,AavCA,ACHA,AtBkEA,AGTA,AQxBA,AS3BA,Ad0CA,ALeA,AgBhDA,ADGA,ADGA,AjBmDA,AqB/DA;ADIA,AV8BA,AavCA,ACHA,AtBkEA,AGTA,AQxBA,AS3BA,Ad0CA,ALeA,AgBhDA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,AavCA,ACHA,AtBkEA,AGTA,AQxBA,AS3BA,Ad0CA,ALeA,AgBhDA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,AavCA,ACHA,AtBkEA,AGTA,AQxBA,AS3BA,Ad0CA,ALeA,AgBhDA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,AavCA,ACHA,AtBkEA,AGTA,AQxBA,AS3BA,Ad0CA,ALeA,AgBhDA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,AavCA,ACHA,AtBkEA,AGTA,AQxBA,AS3BA,Ad0CA,ALeA,AgBhDA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,AavCA,ACHA,AtBkEA,AGTA,AQxBA,AS3BA,Ad0CA,ALeA,AgBhDA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,AavCA,ACHA,AtBkEA,AGTA,AQxBA,AS3BA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,AavCA,ACHA,AtBkEA,AGTA,AiBnDA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,AavCA,ACHA,AtBkEA,AGTA,AiBnDA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,AavCA,ACHA,AtBkEA,AGTA,AiBnDA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,AavCA,ACHA,AtBkEA,AGTA,AiBnDA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,AavCA,ACHA,AtBkEA,AGTA,AiBnDA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,AavCA,ACHA,AtBkEA,AGTA,AiBnDA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,AavCA,ACHA,AtBkEA,AGTA,AiBnDA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,Ac1CA,AtBkEA,AGTA,AiBnDA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,Ac1CA,AtBkEA,AGTA,AiBnDA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,Ac1CA,AtBkEA,AGTA,AiBnDA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,Ac1CA,AtBkEA,AGTA,AiBnDA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,Ac1CA,AtBkEA,AGTA,AiBnDA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,Ac1CA,AtBkEA,AGTA,AiBnDA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,Ac1CA,AtBkEA,AoB5DA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,Ac1CA,AtBkEA,AoB5DA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,Ac1CA,AtBkEA,AoB5DA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,Ac1CA,AtBkEA,AoB5DA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,Ac1CA,AtBkEA,AoB5DA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,Ac1CA,AtBkEA,AoB5DA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AWjCA,ADGA,ADGA,AQxBA,AzB2EA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AWjCA,ADGA,ADGA,AjBmDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AWjCA,ADGA,ADGA,AjBmDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AWjCA,ADGA,AlBsDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AWjCA,ADGA,AlBsDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AWjCA,ADGA,AlBsDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AWjCA,ADGA,AlBsDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AWjCA,ADGA,AlBsDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AWjCA,ADGA,AlBsDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AU9BA,AlBsDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AU9BA,AlBsDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AU9BA,AlBsDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AU9BA,AlBsDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AU9BA,AlBsDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AU9BA,AlBsDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AU9BA,AlBsDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AU9BA,AlBsDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AU9BA,AlBsDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AU9BA,AlBsDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,Ad0CA,AU9BA,AlBsDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,AJYA,AlBsDA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,AtBkEA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,AtBkEA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,AtBkEA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,AtBkEA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,AtBkEA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,AtBkEA,AqB/DA;ADIA,AV8BA,Ac1CA,AFMA,AtBkEA,AqB/DA;ADIA,AV8BA,AYpCA,AtBkEA,AqB/DA;ADIA,AV8BA,AYpCA,AtBkEA,AqB/DA;ADIA,AV8BA,AYpCA,AtBkEA,AqB/DA;ADIA,AV8BA,AYpCA,AtBkEA,AqB/DA;ADIA,AV8BA,AYpCA,AtBkEA,AqB/DA;ADIA,AV8BA,AYpCA,AtBkEA,AqB/DA;ADIA,AV8BA,AYpCA,AtBkEA,AqB/DA;ADIA,AV8BA,AYpCA,AtBkEA,AqB/DA;ADIA,AV8BA,AYpCA,AtBkEA,AqB/DA;ADIA,AV8BA,AYpCA,AtBkEA,AqB/DA;ADIA,AV8BA,AV8BA,AqB/DA;ADIA,AV8BA,AV8BA,AqB/DA;ADIA,AV8BA,AV8BA,AqB/DA;ADIA,AV8BA,AV8BA,AqB/DA;ADIA,AV8BA,AV8BA,AqB/DA;ADIA,AV8BA,AV8BA,AqB/DA;ADIA,AV8BA,AV8BA,AqB/DA;ADIA,AV8BA,AV8BA,AqB/DA;ADIA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,AV8BA,AV8BA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AoB3DA,ApB4DA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["module.exports = require('./lib/axios');","\r\n\r\nvar utils = require('./utils');\r\nvar bind = require('./helpers/bind');\r\nvar Axios = require('./core/Axios');\r\nvar mergeConfig = require('./core/mergeConfig');\r\nvar defaults = require('./defaults');\r\n\r\n/**\r\n * Create an instance of Axios\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {Axios} A new instance of Axios\r\n */\r\nfunction createInstance(defaultConfig) {\r\n  var context = new Axios(defaultConfig);\r\n  var instance = bind(Axios.prototype.request, context);\r\n\r\n  // Copy axios.prototype to instance\r\n  utils.extend(instance, Axios.prototype, context);\r\n\r\n  // Copy context to instance\r\n  utils.extend(instance, context);\r\n\r\n  return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nvar axios = createInstance(defaults);\r\n\r\n// Expose Axios class to allow class inheritance\r\naxios.Axios = Axios;\r\n\r\n// Factory for creating new instances\r\naxios.create = function create(instanceConfig) {\r\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\r\n};\r\n\r\n// Expose Cancel & CancelToken\r\naxios.Cancel = require('./cancel/Cancel');\r\naxios.CancelToken = require('./cancel/CancelToken');\r\naxios.isCancel = require('./cancel/isCancel');\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = require('./helpers/spread');\r\n\r\nmodule.exports = axios;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = axios;\r\n","\r\n\r\nvar bind = require('./helpers/bind');\r\n\r\n/*global toString:true*/\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Buffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Buffer, otherwise false\r\n */\r\nfunction isBuffer(val) {\r\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\r\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nfunction isStream(val) {\r\n  return isObject(val) && isFunction(val.pipe);\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nfunction isURLSearchParams(val) {\r\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\r\n                                           navigator.product === 'NativeScript' ||\r\n                                           navigator.product === 'NS')) {\r\n    return false;\r\n  }\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (typeof result[key] === 'object' && typeof val === 'object') {\r\n      result[key] = merge(result[key], val);\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Function equal to merge with the difference being that no reference\r\n * to original objects is kept.\r\n *\r\n * @see merge\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (typeof result[key] === 'object' && typeof val === 'object') {\r\n      result[key] = deepMerge(result[key], val);\r\n    } else if (typeof val === 'object') {\r\n      result[key] = deepMerge({}, val);\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\r\nfunction extend(a, b, thisArg) {\r\n  forEach(b, function assignValue(val, key) {\r\n    if (thisArg && typeof val === 'function') {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isBuffer: isBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isFunction: isFunction,\r\n  isStream: isStream,\r\n  isURLSearchParams: isURLSearchParams,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  deepMerge: deepMerge,\r\n  extend: extend,\r\n  trim: trim\r\n};\r\n","\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n","\r\n\r\nvar utils = require('./../utils');\r\nvar buildURL = require('../helpers/buildURL');\r\nvar InterceptorManager = require('./InterceptorManager');\r\nvar dispatchRequest = require('./dispatchRequest');\r\nvar mergeConfig = require('./mergeConfig');\r\n\r\n/**\r\n * Create a new instance of Axios\r\n *\r\n * @param {Object} instanceConfig The default config for the instance\r\n */\r\nfunction Axios(instanceConfig) {\r\n  this.defaults = instanceConfig;\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\n/**\r\n * Dispatch a request\r\n *\r\n * @param {Object} config The config specific for this request (merged with this.defaults)\r\n */\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = arguments[1] || {};\r\n    config.url = arguments[0];\r\n  } else {\r\n    config = config || {};\r\n  }\r\n\r\n  config = mergeConfig(this.defaults, config);\r\n\r\n  // Set config.method\r\n  if (config.method) {\r\n    config.method = config.method.toLowerCase();\r\n  } else if (this.defaults.method) {\r\n    config.method = this.defaults.method.toLowerCase();\r\n  } else {\r\n    config.method = 'get';\r\n  }\r\n\r\n  // Hook up interceptors middleware\r\n  var chain = [dispatchRequest, undefined];\r\n  var promise = Promise.resolve(config);\r\n\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    chain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  while (chain.length) {\r\n    promise = promise.then(chain.shift(), chain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\nAxios.prototype.getUri = function getUri(config) {\r\n  config = mergeConfig(this.defaults, config);\r\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\r\n};\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(utils.merge(config || {}, {\r\n      method: method,\r\n      url: url\r\n    }));\r\n  };\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(utils.merge(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n});\r\n\r\nmodule.exports = Axios;\r\n","\r\n\r\nvar utils = require('./../utils');\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%40/gi, '@').\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else if (utils.isURLSearchParams(params)) {\r\n    serializedParams = params.toString();\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      } else {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    var hashmarkIndex = url.indexOf('#');\r\n    if (hashmarkIndex !== -1) {\r\n      url = url.slice(0, hashmarkIndex);\r\n    }\r\n\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n","\r\n\r\nvar utils = require('./../utils');\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n","\r\n\r\nvar utils = require('./../utils');\r\nvar transformData = require('./transformData');\r\nvar isCancel = require('../cancel/isCancel');\r\nvar defaults = require('../defaults');\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nfunction throwIfCancellationRequested(config) {\r\n  if (config.cancelToken) {\r\n    config.cancelToken.throwIfRequested();\r\n  }\r\n}\r\n\r\n/**\r\n * Dispatch a request to the server using the configured adapter.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  throwIfCancellationRequested(config);\r\n\r\n  // Ensure headers exist\r\n  config.headers = config.headers || {};\r\n\r\n  // Transform request data\r\n  config.data = transformData(\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  var adapter = config.adapter || defaults.adapter;\r\n\r\n  return adapter(config).then(function onAdapterResolution(response) {\r\n    throwIfCancellationRequested(config);\r\n\r\n    // Transform response data\r\n    response.data = transformData(\r\n      response.data,\r\n      response.headers,\r\n      config.transformResponse\r\n    );\r\n\r\n    return response;\r\n  }, function onAdapterRejection(reason) {\r\n    if (!isCancel(reason)) {\r\n      throwIfCancellationRequested(config);\r\n\r\n      // Transform response data\r\n      if (reason && reason.response) {\r\n        reason.response.data = transformData(\r\n          reason.response.data,\r\n          reason.response.headers,\r\n          config.transformResponse\r\n        );\r\n      }\r\n    }\r\n\r\n    return Promise.reject(reason);\r\n  });\r\n};\r\n","\r\n\r\nvar utils = require('./../utils');\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn(data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n","\r\n\r\nmodule.exports = function isCancel(value) {\r\n  return !!(value && value.__CANCEL__);\r\n};\r\n","\r\n\r\nvar utils = require('./utils');\r\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\r\n\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nfunction setContentTypeIfUnset(headers, value) {\r\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\r\n    headers['Content-Type'] = value;\r\n  }\r\n}\r\n\r\nfunction getDefaultAdapter() {\r\n  var adapter;\r\n  if (typeof XMLHttpRequest !== 'undefined') {\r\n    // For browsers use XHR adapter\r\n    adapter = require('./adapters/xhr');\r\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\r\n    // For node use HTTP adapter\r\n    adapter = require('./adapters/http');\r\n  }\r\n  return adapter;\r\n}\r\n\r\nvar defaults = {\r\n  adapter: getDefaultAdapter(),\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    normalizeHeaderName(headers, 'Accept');\r\n    normalizeHeaderName(headers, 'Content-Type');\r\n    if (utils.isFormData(data) ||\r\n      utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\r\n      return data.toString();\r\n    }\r\n    if (utils.isObject(data)) {\r\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    /*eslint no-param-reassign:0*/\r\n    if (typeof data === 'string') {\r\n      try {\r\n        data = JSON.parse(data);\r\n      } catch (e) { /* Ignore */ }\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  }\r\n};\r\n\r\ndefaults.headers = {\r\n  common: {\r\n    'Accept': 'application/json, text/plain, */*'\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\r\n});\r\n\r\nmodule.exports = defaults;\r\n","\r\n\r\nvar utils = require('../utils');\r\n\r\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\r\n  utils.forEach(headers, function processHeader(value, name) {\r\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\r\n      headers[normalizedName] = value;\r\n      delete headers[name];\r\n    }\r\n  });\r\n};\r\n","\r\n\r\nvar utils = require('./../utils');\r\nvar settle = require('./../core/settle');\r\nvar buildURL = require('./../helpers/buildURL');\r\nvar buildFullPath = require('../core/buildFullPath');\r\nvar parseHeaders = require('./../helpers/parseHeaders');\r\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\r\nvar createError = require('../core/createError');\r\n\r\nmodule.exports = function xhrAdapter(config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    var requestData = config.data;\r\n    var requestHeaders = config.headers;\r\n\r\n    if (utils.isFormData(requestData)) {\r\n      delete requestHeaders['Content-Type']; // Let the browser set it\r\n    }\r\n\r\n    var request = new XMLHttpRequest();\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password || '';\r\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    var fullPath = buildFullPath(config.baseURL, config.url);\r\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    // Listen for ready state\r\n    request.onreadystatechange = function handleLoad() {\r\n      if (!request || request.readyState !== 4) {\r\n        return;\r\n      }\r\n\r\n      // The request errored out and we didn't get a response, this will be\r\n      // handled by onerror instead\r\n      // With one exception: request that using file: protocol, most browsers\r\n      // will return status as 0 even though it's a successful request\r\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n        return;\r\n      }\r\n\r\n      // Prepare the response\r\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\r\n      var response = {\r\n        data: responseData,\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        headers: responseHeaders,\r\n        config: config,\r\n        request: request\r\n      };\r\n\r\n      settle(resolve, reject, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle browser request cancellation (as opposed to a manual cancellation)\r\n    request.onabort = function handleAbort() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n\r\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(createError('Network Error', config, null, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\r\n      if (config.timeoutErrorMessage) {\r\n        timeoutErrorMessage = config.timeoutErrorMessage;\r\n      }\r\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (utils.isStandardBrowserEnv()) {\r\n      var cookies = require('./../helpers/cookies');\r\n\r\n      // Add xsrf header\r\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\r\n        cookies.read(config.xsrfCookieName) :\r\n        undefined;\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n      }\r\n    }\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n          // Remove Content-Type if data is undefined\r\n          delete requestHeaders[key];\r\n        } else {\r\n          // Otherwise add header to the request\r\n          request.setRequestHeader(key, val);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (!utils.isUndefined(config.withCredentials)) {\r\n      request.withCredentials = !!config.withCredentials;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (config.responseType) {\r\n      try {\r\n        request.responseType = config.responseType;\r\n      } catch (e) {\r\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\r\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\r\n        if (config.responseType !== 'json') {\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', config.onDownloadProgress);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', config.onUploadProgress);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (!request) {\r\n          return;\r\n        }\r\n\r\n        request.abort();\r\n        reject(cancel);\r\n        // Clean up request\r\n        request = null;\r\n      });\r\n    }\r\n\r\n    if (requestData === undefined) {\r\n      requestData = null;\r\n    }\r\n\r\n    // Send the request\r\n    request.send(requestData);\r\n  });\r\n};\r\n","\r\n\r\nvar createError = require('./createError');\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nmodule.exports = function settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  if (!validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(createError(\r\n      'Request failed with status code ' + response.status,\r\n      response.config,\r\n      null,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n};\r\n","\r\n\r\nvar enhanceError = require('./enhanceError');\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nmodule.exports = function createError(message, config, code, request, response) {\r\n  var error = new Error(message);\r\n  return enhanceError(error, config, code, request, response);\r\n};\r\n","\r\n\r\n/**\r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nmodule.exports = function enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n\r\n  error.request = request;\r\n  error.response = response;\r\n  error.isAxiosError = true;\r\n\r\n  error.toJSON = function() {\r\n    return {\r\n      // Standard\r\n      message: this.message,\r\n      name: this.name,\r\n      // Microsoft\r\n      description: this.description,\r\n      number: this.number,\r\n      // Mozilla\r\n      fileName: this.fileName,\r\n      lineNumber: this.lineNumber,\r\n      columnNumber: this.columnNumber,\r\n      stack: this.stack,\r\n      // Axios\r\n      config: this.config,\r\n      code: this.code\r\n    };\r\n  };\r\n  return error;\r\n};\r\n","\r\n\r\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\r\nvar combineURLs = require('../helpers/combineURLs');\r\n\r\n/**\r\n * Creates a new URL by combining the baseURL with the requestedURL,\r\n * only when the requestedURL is not already an absolute URL.\r\n * If the requestURL is absolute, this function returns the requestedURL untouched.\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} requestedURL Absolute or relative URL to combine\r\n * @returns {string} The combined full path\r\n */\r\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\r\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\r\n    return combineURLs(baseURL, requestedURL);\r\n  }\r\n  return requestedURL;\r\n};\r\n","\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n","\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL;\r\n};\r\n","\r\n\r\nvar utils = require('./../utils');\r\n\r\n// Headers whose duplicates are ignored by node\r\n// c.f. https://nodejs.org/api/http.html#http_message_headers\r\nvar ignoreDuplicateOf = [\r\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n  'referer', 'retry-after', 'user-agent'\r\n];\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\r\n        return;\r\n      }\r\n      if (key === 'set-cookie') {\r\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\r\n      } else {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n","\r\n\r\nvar utils = require('./../utils');\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n    (function standardBrowserEnv() {\r\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n      var urlParsingNode = document.createElement('a');\r\n      var originURL;\r\n\r\n      /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n      function resolveURL(url) {\r\n        var href = url;\r\n\r\n        if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n          urlParsingNode.setAttribute('href', href);\r\n          href = urlParsingNode.href;\r\n        }\r\n\r\n        urlParsingNode.setAttribute('href', href);\r\n\r\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n        return {\r\n          href: urlParsingNode.href,\r\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n          host: urlParsingNode.host,\r\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n          hostname: urlParsingNode.hostname,\r\n          port: urlParsingNode.port,\r\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n            urlParsingNode.pathname :\r\n            '/' + urlParsingNode.pathname\r\n        };\r\n      }\r\n\r\n      originURL = resolveURL(window.location.href);\r\n\r\n      /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n      return function isURLSameOrigin(requestURL) {\r\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n        return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return function isURLSameOrigin() {\r\n        return true;\r\n      };\r\n    })()\r\n);\r\n","\r\n\r\nvar utils = require('./../utils');\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n    (function standardBrowserEnv() {\r\n      return {\r\n        write: function write(name, value, expires, path, domain, secure) {\r\n          var cookie = [];\r\n          cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n          if (utils.isNumber(expires)) {\r\n            cookie.push('expires=' + new Date(expires).toGMTString());\r\n          }\r\n\r\n          if (utils.isString(path)) {\r\n            cookie.push('path=' + path);\r\n          }\r\n\r\n          if (utils.isString(domain)) {\r\n            cookie.push('domain=' + domain);\r\n          }\r\n\r\n          if (secure === true) {\r\n            cookie.push('secure');\r\n          }\r\n\r\n          document.cookie = cookie.join('; ');\r\n        },\r\n\r\n        read: function read(name) {\r\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n          return (match ? decodeURIComponent(match[3]) : null);\r\n        },\r\n\r\n        remove: function remove(name) {\r\n          this.write(name, '', Date.now() - 86400000);\r\n        }\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return {\r\n        write: function write() {},\r\n        read: function read() { return null; },\r\n        remove: function remove() {}\r\n      };\r\n    })()\r\n);\r\n","\r\n\r\nvar utils = require('./../utils');\r\nvar settle = require('./../core/settle');\r\nvar buildFullPath = require('../core/buildFullPath');\r\nvar buildURL = require('./../helpers/buildURL');\r\nvar http = require('http');\r\nvar https = require('https');\r\nvar httpFollow = require('follow-redirects').http;\r\nvar httpsFollow = require('follow-redirects').https;\r\nvar url = require('url');\r\nvar zlib = require('zlib');\r\nvar pkg = require('./../../package.json');\r\nvar createError = require('../core/createError');\r\nvar enhanceError = require('../core/enhanceError');\r\n\r\nvar isHttps = /https:?/;\r\n\r\n/*eslint consistent-return:0*/\r\nmodule.exports = function httpAdapter(config) {\r\n  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {\r\n    var resolve = function resolve(value) {\r\n      resolvePromise(value);\r\n    };\r\n    var reject = function reject(value) {\r\n      rejectPromise(value);\r\n    };\r\n    var data = config.data;\r\n    var headers = config.headers;\r\n\r\n    // Set User-Agent (required by some servers)\r\n    // Only set header if it hasn't been set in config\r\n    // See https://github.com/axios/axios/issues/69\r\n    if (!headers['User-Agent'] && !headers['user-agent']) {\r\n      headers['User-Agent'] = 'axios/' + pkg.version;\r\n    }\r\n\r\n    if (data && !utils.isStream(data)) {\r\n      if (Buffer.isBuffer(data)) {\r\n        // Nothing to do...\r\n      } else if (utils.isArrayBuffer(data)) {\r\n        data = Buffer.from(new Uint8Array(data));\r\n      } else if (utils.isString(data)) {\r\n        data = Buffer.from(data, 'utf-8');\r\n      } else {\r\n        return reject(createError(\r\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\r\n          config\r\n        ));\r\n      }\r\n\r\n      // Add Content-Length header if data exists\r\n      headers['Content-Length'] = data.length;\r\n    }\r\n\r\n    // HTTP basic authentication\r\n    var auth = undefined;\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password || '';\r\n      auth = username + ':' + password;\r\n    }\r\n\r\n    // Parse url\r\n    var fullPath = buildFullPath(config.baseURL, config.url);\r\n    var parsed = url.parse(fullPath);\r\n    var protocol = parsed.protocol || 'http:';\r\n\r\n    if (!auth && parsed.auth) {\r\n      var urlAuth = parsed.auth.split(':');\r\n      var urlUsername = urlAuth[0] || '';\r\n      var urlPassword = urlAuth[1] || '';\r\n      auth = urlUsername + ':' + urlPassword;\r\n    }\r\n\r\n    if (auth) {\r\n      delete headers.Authorization;\r\n    }\r\n\r\n    var isHttpsRequest = isHttps.test(protocol);\r\n    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\r\n\r\n    var options = {\r\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\r\n      method: config.method.toUpperCase(),\r\n      headers: headers,\r\n      agent: agent,\r\n      agents: { http: config.httpAgent, https: config.httpsAgent },\r\n      auth: auth\r\n    };\r\n\r\n    if (config.socketPath) {\r\n      options.socketPath = config.socketPath;\r\n    } else {\r\n      options.hostname = parsed.hostname;\r\n      options.port = parsed.port;\r\n    }\r\n\r\n    var proxy = config.proxy;\r\n    if (!proxy && proxy !== false) {\r\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\r\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\r\n      if (proxyUrl) {\r\n        var parsedProxyUrl = url.parse(proxyUrl);\r\n        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;\r\n        var shouldProxy = true;\r\n\r\n        if (noProxyEnv) {\r\n          var noProxy = noProxyEnv.split(',').map(function trim(s) {\r\n            return s.trim();\r\n          });\r\n\r\n          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {\r\n            if (!proxyElement) {\r\n              return false;\r\n            }\r\n            if (proxyElement === '*') {\r\n              return true;\r\n            }\r\n            if (proxyElement[0] === '.' &&\r\n                parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {\r\n              return true;\r\n            }\r\n\r\n            return parsed.hostname === proxyElement;\r\n          });\r\n        }\r\n\r\n\r\n        if (shouldProxy) {\r\n          proxy = {\r\n            host: parsedProxyUrl.hostname,\r\n            port: parsedProxyUrl.port\r\n          };\r\n\r\n          if (parsedProxyUrl.auth) {\r\n            var proxyUrlAuth = parsedProxyUrl.auth.split(':');\r\n            proxy.auth = {\r\n              username: proxyUrlAuth[0],\r\n              password: proxyUrlAuth[1]\r\n            };\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (proxy) {\r\n      options.hostname = proxy.host;\r\n      options.host = proxy.host;\r\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\r\n      options.port = proxy.port;\r\n      options.path = protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path;\r\n\r\n      // Basic proxy authorization\r\n      if (proxy.auth) {\r\n        var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\r\n        options.headers['Proxy-Authorization'] = 'Basic ' + base64;\r\n      }\r\n    }\r\n\r\n    var transport;\r\n    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);\r\n    if (config.transport) {\r\n      transport = config.transport;\r\n    } else if (config.maxRedirects === 0) {\r\n      transport = isHttpsProxy ? https : http;\r\n    } else {\r\n      if (config.maxRedirects) {\r\n        options.maxRedirects = config.maxRedirects;\r\n      }\r\n      transport = isHttpsProxy ? httpsFollow : httpFollow;\r\n    }\r\n\r\n    if (config.maxContentLength && config.maxContentLength > -1) {\r\n      options.maxBodyLength = config.maxContentLength;\r\n    }\r\n\r\n    // Create the request\r\n    var req = transport.request(options, function handleResponse(res) {\r\n      if (req.aborted) return;\r\n\r\n      // uncompress the response body transparently if required\r\n      var stream = res;\r\n      switch (res.headers['content-encoding']) {\r\n      /*eslint default-case:0*/\r\n      case 'gzip':\r\n      case 'compress':\r\n      case 'deflate':\r\n        // add the unzipper to the body stream processing pipeline\r\n        stream = (res.statusCode === 204) ? stream : stream.pipe(zlib.createUnzip());\r\n\r\n        // remove the content-encoding in order to not confuse downstream operations\r\n        delete res.headers['content-encoding'];\r\n        break;\r\n      }\r\n\r\n      // return the last request in case of redirects\r\n      var lastRequest = res.req || req;\r\n\r\n      var response = {\r\n        status: res.statusCode,\r\n        statusText: res.statusMessage,\r\n        headers: res.headers,\r\n        config: config,\r\n        request: lastRequest\r\n      };\r\n\r\n      if (config.responseType === 'stream') {\r\n        response.data = stream;\r\n        settle(resolve, reject, response);\r\n      } else {\r\n        var responseBuffer = [];\r\n        stream.on('data', function handleStreamData(chunk) {\r\n          responseBuffer.push(chunk);\r\n\r\n          // make sure the content length is not over the maxContentLength if specified\r\n          if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {\r\n            stream.destroy();\r\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\r\n              config, null, lastRequest));\r\n          }\r\n        });\r\n\r\n        stream.on('error', function handleStreamError(err) {\r\n          if (req.aborted) return;\r\n          reject(enhanceError(err, config, null, lastRequest));\r\n        });\r\n\r\n        stream.on('end', function handleStreamEnd() {\r\n          var responseData = Buffer.concat(responseBuffer);\r\n          if (config.responseType !== 'arraybuffer') {\r\n            responseData = responseData.toString(config.responseEncoding);\r\n          }\r\n\r\n          response.data = responseData;\r\n          settle(resolve, reject, response);\r\n        });\r\n      }\r\n    });\r\n\r\n    // Handle errors\r\n    req.on('error', function handleRequestError(err) {\r\n      if (req.aborted) return;\r\n      reject(enhanceError(err, config, null, req));\r\n    });\r\n\r\n    // Handle request timeout\r\n    if (config.timeout) {\r\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\r\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\r\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\r\n      // And then these socket which be hang up will devoring CPU little by little.\r\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\r\n      req.setTimeout(config.timeout, function handleRequestTimeout() {\r\n        req.abort();\r\n        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', req));\r\n      });\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (req.aborted) return;\r\n\r\n        req.abort();\r\n        reject(cancel);\r\n      });\r\n    }\r\n\r\n    // Send the request\r\n    if (utils.isStream(data)) {\r\n      data.on('error', function handleStreamError(err) {\r\n        reject(enhanceError(err, config, null, req));\r\n      }).pipe(req);\r\n    } else {\r\n      req.end(data);\r\n    }\r\n  });\r\n};\r\n","module.exports = {\r\n  \"name\": \"axios\",\r\n  \"version\": \"0.19.2\",\r\n  \"description\": \"Promise based HTTP client for the browser and node.js\",\r\n  \"main\": \"index.js\",\r\n  \"scripts\": {\r\n    \"test\": \"grunt test && bundlesize\",\r\n    \"start\": \"node ./sandbox/server.js\",\r\n    \"build\": \"NODE_ENV=production grunt build\",\r\n    \"preversion\": \"npm test\",\r\n    \"version\": \"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\",\r\n    \"postversion\": \"git push && git push --tags\",\r\n    \"examples\": \"node ./examples/server.js\",\r\n    \"coveralls\": \"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\",\r\n    \"fix\": \"eslint --fix lib/**/*.js\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/axios/axios.git\"\r\n  },\r\n  \"keywords\": [\r\n    \"xhr\",\r\n    \"http\",\r\n    \"ajax\",\r\n    \"promise\",\r\n    \"node\"\r\n  ],\r\n  \"author\": \"Matt Zabriskie\",\r\n  \"license\": \"MIT\",\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/axios/axios/issues\"\r\n  },\r\n  \"homepage\": \"https://github.com/axios/axios\",\r\n  \"devDependencies\": {\r\n    \"bundlesize\": \"^0.17.0\",\r\n    \"coveralls\": \"^3.0.0\",\r\n    \"es6-promise\": \"^4.2.4\",\r\n    \"grunt\": \"^1.0.2\",\r\n    \"grunt-banner\": \"^0.6.0\",\r\n    \"grunt-cli\": \"^1.2.0\",\r\n    \"grunt-contrib-clean\": \"^1.1.0\",\r\n    \"grunt-contrib-watch\": \"^1.0.0\",\r\n    \"grunt-eslint\": \"^20.1.0\",\r\n    \"grunt-karma\": \"^2.0.0\",\r\n    \"grunt-mocha-test\": \"^0.13.3\",\r\n    \"grunt-ts\": \"^6.0.0-beta.19\",\r\n    \"grunt-webpack\": \"^1.0.18\",\r\n    \"istanbul-instrumenter-loader\": \"^1.0.0\",\r\n    \"jasmine-core\": \"^2.4.1\",\r\n    \"karma\": \"^1.3.0\",\r\n    \"karma-chrome-launcher\": \"^2.2.0\",\r\n    \"karma-coverage\": \"^1.1.1\",\r\n    \"karma-firefox-launcher\": \"^1.1.0\",\r\n    \"karma-jasmine\": \"^1.1.1\",\r\n    \"karma-jasmine-ajax\": \"^0.1.13\",\r\n    \"karma-opera-launcher\": \"^1.0.0\",\r\n    \"karma-safari-launcher\": \"^1.0.0\",\r\n    \"karma-sauce-launcher\": \"^1.2.0\",\r\n    \"karma-sinon\": \"^1.0.5\",\r\n    \"karma-sourcemap-loader\": \"^0.3.7\",\r\n    \"karma-webpack\": \"^1.7.0\",\r\n    \"load-grunt-tasks\": \"^3.5.2\",\r\n    \"minimist\": \"^1.2.0\",\r\n    \"mocha\": \"^5.2.0\",\r\n    \"sinon\": \"^4.5.0\",\r\n    \"typescript\": \"^2.8.1\",\r\n    \"url-search-params\": \"^0.10.0\",\r\n    \"webpack\": \"^1.13.1\",\r\n    \"webpack-dev-server\": \"^1.14.1\"\r\n  },\r\n  \"browser\": {\r\n    \"./lib/adapters/http.js\": \"./lib/adapters/xhr.js\"\r\n  },\r\n  \"typings\": \"./index.d.ts\",\r\n  \"dependencies\": {\r\n    \"follow-redirects\": \"1.5.10\"\r\n  },\r\n  \"bundlesize\": [\r\n    {\r\n      \"path\": \"./dist/axios.min.js\",\r\n      \"threshold\": \"5kB\"\r\n    }\r\n  ]\r\n}\r\n","\r\n\r\nvar utils = require('../utils');\r\n\r\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\r\nmodule.exports = function mergeConfig(config1, config2) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  config2 = config2 || {};\r\n  var config = {};\r\n\r\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\r\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\r\n  var defaultToConfig2Keys = [\r\n    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\r\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\r\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\r\n    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\r\n    'httpsAgent', 'cancelToken', 'socketPath'\r\n  ];\r\n\r\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\r\n    if (typeof config2[prop] !== 'undefined') {\r\n      config[prop] = config2[prop];\r\n    }\r\n  });\r\n\r\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\r\n    if (utils.isObject(config2[prop])) {\r\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\r\n    } else if (typeof config2[prop] !== 'undefined') {\r\n      config[prop] = config2[prop];\r\n    } else if (utils.isObject(config1[prop])) {\r\n      config[prop] = utils.deepMerge(config1[prop]);\r\n    } else if (typeof config1[prop] !== 'undefined') {\r\n      config[prop] = config1[prop];\r\n    }\r\n  });\r\n\r\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\r\n    if (typeof config2[prop] !== 'undefined') {\r\n      config[prop] = config2[prop];\r\n    } else if (typeof config1[prop] !== 'undefined') {\r\n      config[prop] = config1[prop];\r\n    }\r\n  });\r\n\r\n  var axiosKeys = valueFromConfig2Keys\r\n    .concat(mergeDeepPropertiesKeys)\r\n    .concat(defaultToConfig2Keys);\r\n\r\n  var otherKeys = Object\r\n    .keys(config2)\r\n    .filter(function filterAxiosKeys(key) {\r\n      return axiosKeys.indexOf(key) === -1;\r\n    });\r\n\r\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\r\n    if (typeof config2[prop] !== 'undefined') {\r\n      config[prop] = config2[prop];\r\n    } else if (typeof config1[prop] !== 'undefined') {\r\n      config[prop] = config1[prop];\r\n    }\r\n  });\r\n\r\n  return config;\r\n};\r\n","\r\n\r\n/**\r\n * A `Cancel` is an object that is thrown when an operation is canceled.\r\n *\r\n * @class\r\n * @param {string=} message The message.\r\n */\r\nfunction Cancel(message) {\r\n  this.message = message;\r\n}\r\n\r\nCancel.prototype.toString = function toString() {\r\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\r\n};\r\n\r\nCancel.prototype.__CANCEL__ = true;\r\n\r\nmodule.exports = Cancel;\r\n","\r\n\r\nvar Cancel = require('./Cancel');\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @class\r\n * @param {Function} executor The executor function.\r\n */\r\nfunction CancelToken(executor) {\r\n  if (typeof executor !== 'function') {\r\n    throw new TypeError('executor must be a function.');\r\n  }\r\n\r\n  var resolvePromise;\r\n  this.promise = new Promise(function promiseExecutor(resolve) {\r\n    resolvePromise = resolve;\r\n  });\r\n\r\n  var token = this;\r\n  executor(function cancel(message) {\r\n    if (token.reason) {\r\n      // Cancellation has already been requested\r\n      return;\r\n    }\r\n\r\n    token.reason = new Cancel(message);\r\n    resolvePromise(token.reason);\r\n  });\r\n}\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\r\n  if (this.reason) {\r\n    throw this.reason;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n * cancels the `CancelToken`.\r\n */\r\nCancelToken.source = function source() {\r\n  var cancel;\r\n  var token = new CancelToken(function executor(c) {\r\n    cancel = c;\r\n  });\r\n  return {\r\n    token: token,\r\n    cancel: cancel\r\n  };\r\n};\r\n\r\nmodule.exports = CancelToken;\r\n","\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n"]}